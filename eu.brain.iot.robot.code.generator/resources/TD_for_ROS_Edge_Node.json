{
   "id":"urn:dev:wot:robotnik:client",
   "lastModified":"1552589098",
   "links":[
      {
         "rel":"about"
      }
   ],
   "security":[
      "nosec_sc"
   ],
	"ros:masterURI":"http://localhost:11311/",
   "support":"https://new.siemens.com/global/de/unternehmen/innovationen/corporate-technology.html",
   "descriptions":{
      "es":"Robotnik REST implementación para Brain-Iot",
      "en":"Robotnik REST implementation for Brain-Iot",
      "de":"Robotnik REST Implementierung für Brain-Iot"
   },
   "version":{
      "instance":"1.0.0"
   },
   "securityDefinitions":{
      "nosec_sc":{
         "scheme":"nosec"
      }
   },
   "title":"robotnik",
   "created":"1552554817",
   "description":"Robotnik REST Implementation for Brain-Iot",
   "@context":[
      "http://www.w3.org/ns/td",
      {
         "iot":"http://iotschema.org",
         "robot":"http://robot.schema.org",
         "qudt":"http://qudt.org/schema/qudt"
      }
   ],
   "@type":"Thing",
   "properties":{
      "availability":{
         "type":"object",
         "description":"Gets the robot availability to perform actions",
         "robot:capability":"robot:AvailabilityMonitoring",
			"ros:codeGenerator:class":"AvailibilityComponent",
         "properties":{
            "operation_state":{
               "type":"string",
               "description":"Defines what the robot is doing",
               "robot:capability":"robot:OperationState",
               "enum":[
                  "idle",
                  "calibrating",
                  "moving",
                  "raising_elevator",
                  "lowering_elevator",
                  "charging"
               ]
            },
            "robot_state":{
               "type":"string",
               "description":"Defines the robots global state",
               "robot:capability":"robot:GlobalState",
               "enum":[
                  "init",
                  "standby",
                  "ready",
                  "emergency",
                  "failure"
               ]
            },
            "navigation_status":{
               "type":"object",
               "description":"Defines the robot navigation status",
               "robot:capability":"robot:NavigationStatus",
               "properties":{
                  "ntype":{
                     "type":"string",
                     "description":"Identifies the navigation procedure being used"
                  },
                  "state":{
                     "type":"string",
                     "description":"Defines the navigation state",
                     "enum":[
                        "init",
                        "standby",
                        "ready",
                        "emergency",
                        "failure"
                     ]
                  }
               }
            },
            "localization_status":{
               "type":"object",
               "description":"Defines the robot localization status",
               "robot:capability":"robot:LocalizationStatus",
               "properties":{
                  "node":{
                     "type":"integer",
                     "description":"Closest node/tag (used with the Fleet Management System)",
                     "robot:capability":"robot:ID",
                     "minimum":-1
                  },
                  "reliable":{
                     "type":"boolean",
                     "description":"Flag that indicates that the localization estimation is reliable",
                     "robot:capability":"robot:Reliability"
                  },
                  "pose":{
                     "type":"object",
                     "description":"Current pose related to a global frame used by the localization component",
                     "robot:capability":"robot:Position",
                     "properties":{
                        "header":{
                           "type":"object",
                           "properties":{
                              "stamp":{
                                 "type":"object",
                                 "properties":{
                                    "secs":{
                                       "type":"integer"
                                    },
                                    "nsecs":{
                                       "type":"integer"
                                    }
                                 },
                                 "frame_id":{
                                    "type":"string"
                                 },
                                 "seq":{
                                    "type":"integer"
                                 }
                              }
                           }
                        },
                        "pose":{
                           "type":"object",
                           "properties":{
                              "y":{
                                 "type":"number"
                              },
                              "x":{
                                 "type":"number"
                              },
                              "theta":{
                                 "type":"number"
                              }
                           }
                        }
                     }
                  },
                  "rtype":{
                     "type":"string",
                     "description":"Identifies the localization procedure being used",
                     "robot:capability":"robot:Type"
                  },
                  "state":{
                     "type":"string",
                     "description":"Defines the localization state",
                     "robot:capability":"robot:LocalizationState",
                     "enum":[
                        "init",
                        "standby",
                        "ready",
                        "emergency",
                        "failure",
                        "unknown"
                     ]
                  }
               }
            },
            "robot_status":{
               "type":"object",
               "description":"Defines the current robot status in terms of internal hardware and odometry",
               "robot:capability":"robot:RobotStatus",
               "properties":{
                  "emergency_stop":{
                     "type":"boolean",
                     "description":"Flag that indicates that the emergency_stop is active"
                  },
                  "battery":{
                     "type":"object",
                     "properties":{
                        "time_remaining":{
                           "type":"string",
                           "description":"In seconds"
                        },
                        "time_charging":{
                           "type":"string",
                           "description":"In seconds"
                        },
                        "is_charging":{
                           "type":"boolean",
                           "description":"Flag to indicate if the robot is charging"
                        },
                        "voltage":{
                           "type":"number",
                           "description":"Battery voltage in volts",
                           "iot:capability":"iot:VoltageData"
                        },
                        "level:":{
                           "type":"integer",
                           "description":"Battery percentage",
                           "qudt:capability":"qudt:integerPercentage"
                        }
                     }
                  },
                  "pose":{
                     "type":"object",
                     "description":"Pose based on the robot’s odometry",
                     "robot:capability":"robot:Position",
                     "properties":{
                        "header":{
                           "type":"object",
                           "properties":{
                              "stamp":{
                                 "type":"object",
                                 "properties":{
                                    "secs":{
                                       "type":"integer"
                                    },
                                    "nsecs":{
                                       "type":"integer"
                                    }
                                 },
                                 "frame_id":{
                                    "type":"string"
                                 },
                                 "seq":{
                                    "type":"integer"
                                 }
                              }
                           }
                        },
                        "pose":{
                           "type":"object",
                           "properties":{
                              "y":{
                                 "type":"number"
                              },
                              "x":{
                                 "type":"number"
                              },
                              "theta":{
                                 "type":"number"
                              }
                           }
                        }
                     }
                  },
                  "elevator":{
                     "type":"object",
                     "properties":{
                        "position":{
                           "type":"string"
                        },
                        "state":{
                           "type":"integer"
                        }
                     }
                  },
                  "velocity":{
                     "type":"object",
                     "description":"Current robot velocity",
                     "properties":{
                        "angular_z":{
                           "type":"number"
                        },
                        "linear_x":{
                           "type":"number"
                        },
                        "linear_y":{
                           "type":"number"
                        }
                     }
                  },
                  "sensors":{
                     "type":"object",
                     "description":"List of robot sensors and their state",
                     "properties":{
                        "state":{
                           "type":"string",
                           "robot:capability":"robot:SensorState",
                           "enum":[
                              "init",
                              "standby",
                              "ready",
                              "emergency",
                              "failure",
                              "unknown"
                           ]
                        },
                        "stype":{
                           "type":"string"
                        },
                        "title":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "robot_id":{
               "type":"string",
               "description":"ID to identify the robot",
               "robot:capability":"robot:RobotID"
            },
            "mission_status":{
               "type":"object",
               "description":"State of the current mission or task",
               "robot:capability":"robot:MissionStatus",
               "properties":{
                  "current":{
                     "type":"object",
                     "properties":{
                        "state":{
                           "type":"string"
                        },
                        "id":{
                           "type":"integer"
                        },
                        "description":{
                           "type":"string"
                        }
                     }
                  },
                  "last":{
                     "type":"object",
                     "properties":{
                        "state":{
                           "type":"string"
                        },
                        "id":{
                           "type":"integer"
                        },
                        "description":{
                           "type":"string"
                        }
                     }
                  }
               }
            },
            "control_state":{
               "type":"string",
               "description":"Control state",
               "robot:capability":"robot:ControlState",
               "enum":[
                  "auto",
                  "manual",
                  "follow",
                  "unknown"
               ]
            }
         },
         "observable":true,
         "writeOnly":false,
         "readOnly":true,
         "forms":[
            {
               "href":"",
               "contentType":"application/xml",
               "op":[
                  "readproperty", "observeproperty"
               ],
               "subprotocol":"ros",
               "ros:Role":"Subscriber",
               "ros:TopicName":"/#robotName/robot_local_control/state",
               "ros:TopicType":"robot_local_control_msgs/Status",
               "ros:MessageType":"robot_local_control_msgs.Status"
            }
         ]
      },
      "poseMarker":{
         "type":"object",
         "description":"Get the markers the robot is currently seeing",
         "robot:capability":"robot:MarkersMonitoring",
			"ros:codeGenerator:class":"PoseMarkerComponent",
         "properties":{
            "header":{
               "type":"object",
               "properties":{
                  "stamp":{
                     "type":"object",
                     "properties":{
                        "secs":{
                           "type":"integer"
                        },
                        "nsecs":{
                           "type":"integer"
                        }
                     },
                     "frame_id":{
                        "type":"string"
                     },
                     "seq":{
                        "type":"integer"
                     }
                  }
               }
            },
            "markers":{
               "type":"array",
               "description":"Defines the robot navigation status",
               "robot:capability":"robot:NavigationStatus",
               "items":{
                  "type":"object",
                  "properties":{
                     "header":{
                        "type":"object",
                        "properties":{
                           "stamp":{
                              "type":"object",
                              "properties":{
                                 "secs":{
                                    "type":"integer"
                                 },
                                 "nsecs":{
                                    "type":"integer"
                                 }
                              },
                              "frame_id":{
                                 "type":"string"
                              },
                              "seq":{
                                 "type":"integer"
                              }
                           }
                        }
                     },
                     "confidence":{
                        "type":"integer"
                     },
                     "pose":{
                        "type":"object",
                        "description":"Pose based on the robot’s odometry",
                        "robot:capability":"robot:Position",
                        "properties":{
                           "header":{
                              "type":"object",
                              "properties":{
                                 "stamp":{
                                    "type":"object",
                                    "properties":{
                                       "secs":{
                                          "type":"integer"
                                       },
                                       "nsecs":{
                                          "type":"integer"
                                       }
                                    },
                                    "frame_id":{
                                       "type":"string"
                                    },
                                    "seq":{
                                       "type":"integer"
                                    }
                                 }
                              }
                           },
                           "pose":{
                              "type":"object",
                              "properties":{
                                 "position":{
                                    "type":"object",
                                    "properties":{
                                       "y":{
                                          "type":"number"
                                       },
                                       "x":{
                                          "type":"number"
                                       },
                                       "z":{
                                          "type":"number"
                                       }
                                    }
                                 },
                                 "orientation":{
                                    "type":"object",
                                    "properties":{
                                       "y":{
                                          "type":"number"
                                       },
                                       "x":{
                                          "type":"number"
                                       },
                                       "z":{
                                          "type":"number"
                                       },
                                       "w":{
                                          "type":"number"
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "minItems":1,
               "maxItems":1024
            }
         },
         "observable":true,
         "writeOnly":false,
         "readOnly":true,
         "forms":[
            {
               "href":"",
               "contentType":"application/xml",
               "op":[
                  "readproperty", "observeproperty"
               ],
               "subprotocol":"ros",
               "ros:Role":"Subscriber",
               "ros:TopicName":"/#robotName/ar_pose_marker",
               "ros:TopicType":"ar_track_alvar_msgs/AlvarMarkers",
               "ros:MessageType":"ar_track_alvar_msgs.AlvarMarkers"
            }
         ]
      }
   },
   "actions":{
      "gotoRun":{
         "description":"Commands a robot to go to a goal - the mission will be finished when the robot arrives at the goal",
			"ros:codeGenerator:class":"GoToComponent",
         "input":{
            "type":"object",
            "properties":{
               "procedure":{
                  "type":"object",
                  "properties":{
                     "goals":{
                        "type":"array",
                        "description":"List of goals",
                        "items":{
                           "type":"object",
                           "properties":{
                              "header":{
                                 "type":"object",
                                 "properties":{
                                    "stamp":{
                                       "type":"object",
                                       "properties":{
                                          "secs":{
                                             "type":"number"
                                          },
                                          "nsecs":{
                                             "type":"number"
                                          }
                                       },
                                       "frame_id":{
                                          "type":"string",
                                          "description":"Frame of reference for the pose"
                                       },
                                       "seq":{
                                          "type":"integer"
                                       }
                                    }
                                 }
                              },
                              "pose":{
                                 "type":"object",
                                 "description":"Position and orientation of the goal",
                                 "properties":{
                                    "y":{
                                       "type":"number"
                                    },
                                    "x":{
                                       "type":"number"
                                    },
                                    "theta":{
                                       "type":"number"
                                    }
                                 }
                              }
                           }
                        },
                        "minItems":1,
                        "maxItems":32
                     },
                     "max_velocities":{
                        "type":"array",
                        "description":"List of max velocities allowed",
                        "items":{
                           "type":"object",
                           "properties":{
                              "linear_x":{
                                 "type":"number"
                              },
                              "linear_y":{
                                 "type":"number"
                              },
                              "angular_z":{
                                 "type":"number"
                              }
                           }
                        },
                        "minItems":1,
                        "maxItems":32
                     }
                  }
               }
            }
         },
         "output":{
            "type":"object",
            "properties":{
               "_format":{
                  "type":"string"
               },
               "state":{
                  "type":"object",
                  "properties":{
                     "header":{
                        "type":"object",
                        "properties":{
                           "priority":{
                              "type":"number"
                           },
                           "stamp":{
                              "type":"object",
                              "properties":{
                                 "secs":{
                                    "type":"number"
                                 },
                                 "nsecs":{
                                    "type":"number"
                                 }
                              }
                           },
                           "id":{
                              "type":"number"
                           },
                           "title":{
                              "type":"string"
                           }
                        }
                     },
                     "current_state":{
                        "type":"string",
                        "enum":[
                           "queued",
                           "running",
                           "paused",
                           "finished",
                           "unknown"
                        ]
                     },
                     "last_event":{
                        "type":"string",
                        "enum":[
                           "added",
                           "start",
                           "stop",
                           "cancel",
                           "pause",
                           "resume",
                           "finish",
                           "abort"
                        ]
                     }
                  }
               },
               "result":{
                  "type":"object",
                  "properties":{
                     "message":{
                        "type":"string"
                     },
                     "result":{
                        "type":"string",
                        "enum":[
                           "ok",
                           "error"
                        ]
                     }
                  }
               }
            }
         },
         "forms":[
            {
               "href":"",
               "contentType":"application/xml",
               "op":[
                  "invokeaction"
               ],
               "subprotocol":"ros",
               "ros:serviceName":"/#robotName/robot_local_control/NavigationComponent/GoToComponent/add",
               "ros:serviceType":"robot_local_control_msgs/GoToPetition",
               "ros:serviceRequestType":"robot_local_control_msgs.GoToPetitionRequest",
               "ros:serviceResponseType":"robot_local_control_msgs.GoToPetitionResponse"
            }
         ],
         "idempotent":false,
         "safe":false
      },
      "gotoCancel":{
         "description":"Cancels the current goto mission",
         "ros:codeGenerator:class":"GoToComponent",
         "input":{
            "type":"object",
            "properties":{
               "header":{
                  "type":"object",
                  "properties":{
                     "id":{
                        "type":"string",
                        "description":"The ID of the goto mission you want to cancel; -1 cancels last mission"
                     },
                     "priority":{
                        "type":"number"
                     },
                     "stamp":{
                        "type":"object",
                        "properties":{
                           "secs":{
                              "type":"number"
                           },
                           "nsecs":{
                              "type":"number"
                           }
                        }
                     },
                     "title":{
                        "type":"string"
                     }
                  }
               }
            }
         },
         "output":{
            "type":"object",
            "properties":{
               "_format":{
                  "type":"string"
               },
               "state":{
                  "type":"object",
                  "properties":{
                     "header":{
                        "type":"object",
                        "properties":{
                           "priority":{
                              "type":"string"
                           },
                           "stamp":{
                              "type":"object",
                              "properties":{
                                 "secs":{
                                    "type":"number"
                                 },
                                 "nsecs":{
                                    "type":"number"
                                 }
                              }
                           },
                           "id":{
                              "type":"number"
                           },
                           "title":{
                              "type":"string"
                           }
                        }
                     },
                     "current_state":{
                        "type":"string",
                        "enum":[
                           "queued",
                           "running",
                           "paused",
                           "finished",
                           "unknown"
                        ]
                     },
                     "last_event":{
                        "type":"string",
                        "enum":[
                           "added",
                           "start",
                           "stop",
                           "cancel",
                           "pause",
                           "resume",
                           "finish",
                           "abort"
                        ]
                     }
                  }
               },
               "result":{
                  "type":"object",
                  "properties":{
                     "message":{
                        "type":"string"
                     },
                     "result":{
                        "type":"string",
                        "enum":[
                           "ok",
                           "error"
                        ]
                     }
                  }
               }
            }
         },
         "forms":[
            {
               "href":"",
               "contentType":"application/xml",
               "op":[
                  "invokeaction"
               ],
               "subprotocol":"ros",
               "ros:serviceName":"/#robotName/robot_local_control/NavigationComponent/GoToComponent/cancel",
               "ros:serviceType":"procedures_msgs/ProcedureQuery",
               "ros:serviceRequestType":"procedures_msgs.ProcedureQueryRequest",
               "ros:serviceResponseType":"procedures_msgs.ProcedureQueryResponse"
            }
         ],
         "idempotent":false,
         "safe":false
      },
      "gotoQuery":{
         "description":"Gets the state of a goto mission",
         "ros:codeGenerator:class":"GoToComponent",
         "input":{
            "type":"object",
            "properties":{
               "header":{
                  "type":"object",
                  "properties":{
                     "id":{
                        "type":"string",
                        "description":"The id of the goto mission you want to get the query state; -1 gets the query state of the last mission"
                     },
                     "priority":{
                        "type":"number"
                     },
                     "stamp":{
                        "type":"object",
                        "properties":{
                           "secs":{
                              "type":"number"
                           },
                           "nsecs":{
                              "type":"number"
                           }
                        }
                     },
                     "title":{
                        "type":"string"
                     }
                  }
               }
            }
         },
         "output":{
            "type":"object",
            "properties":{
               "_format":{
                  "type":"string"
               },
               "state":{
                  "type":"object",
                  "properties":{
                     "header":{
                        "type":"object",
                        "properties":{
                           "priority":{
                              "type":"string"
                           },
                           "stamp":{
                              "type":"object",
                              "properties":{
                                 "secs":{
                                    "type":"number"
                                 },
                                 "nsecs":{
                                    "type":"number"
                                 }
                              }
                           },
                           "id":{
                              "type":"number"
                           },
                           "title":{
                              "type":"string"
                           }
                        }
                     },
                     "current_state":{
                        "type":"string",
                        "enum":[
                           "queued",
                           "running",
                           "paused",
                           "finished",
                           "unknown"
                        ]
                     },
                     "last_event":{
                        "type":"string",
                        "enum":[
                           "added",
                           "start",
                           "stop",
                           "cancel",
                           "pause",
                           "resume",
                           "finish",
                           "abort"
                        ]
                     }
                  }
               },
               "result":{
                  "type":"object",
                  "properties":{
                     "message":{
                        "type":"string"
                     },
                     "result":{
                        "type":"string",
                        "enum":[
                           "ok",
                           "error"
                        ]
                     }
                  }
               }
            }
         },
         "forms":[
            {
               "href":"",
               "contentType":"application/xml",
               "op":[
                  "invokeaction"
               ],
               "subprotocol":"ros",
               "ros:serviceName":"/#robotName/robot_local_control/NavigationComponent/GoToComponent/query_state",
               "ros:serviceType":"procedures_msgs/ProcedureQuery",
               "ros:serviceRequestType":"procedures_msgs.ProcedureQueryRequest",
               "ros:serviceResponseType":"procedures_msgs.ProcedureQueryResponse"
            }
         ],
         "idempotent":false,
         "safe":false
      },
      "pickRun":{
         "description":"Commands a robot to start picking procedure; the mission will be finished when the robot raises the cart",
         "ros:codeGenerator:class":"PickComponent",
         "input":{
            "type":"object",
            "properties":{
               "procedure":{
                  "type":"object",
                  "properties":{
                     "pick_frame_id":{
                        "type":"string",
                        "description":"It can be different frames depending on the cart to pick (rb1_base_a_cart2_contact, rb1_base_a_cart3_contact or rb1_base_a_cart4_contact)"
                     }
                  }
               }
            }
         },
         "output":{
            "type":"object",
            "properties":{
               "_format":{
                  "type":"string"
               },
               "state":{
                  "type":"object",
                  "properties":{
                     "header":{
                        "type":"object",
                        "properties":{
                           "priority":{
                              "type":"string"
                           },
                           "stamp":{
                              "type":"object",
                              "properties":{
                                 "secs":{
                                    "type":"number"
                                 },
                                 "nsecs":{
                                    "type":"number"
                                 }
                              }
                           },
                           "id":{
                              "type":"number"
                           },
                           "name":{
                              "type":"string"
                           }
                        }
                     },
                     "current_state":{
                        "type":"string",
                        "enum":[
                           "queued",
                           "running",
                           "paused",
                           "finished",
                           "unknown"
                        ]
                     },
                     "last_event":{
                        "type":"string",
                        "enum":[
                           "added",
                           "start",
                           "stop",
                           "cancel",
                           "pause",
                           "resume",
                           "finish",
                           "abort"
                        ]
                     }
                  }
               },
               "result":{
                  "type":"object",
                  "properties":{
                     "message":{
                        "type":"string"
                     },
                     "result":{
                        "type":"string",
                        "enum":[
                           "ok",
                           "error"
                        ]
                     }
                  }
               }
            }
         },
         "forms":[
            {
               "href":"",
               "contentType":"application/xml",
               "op":[
                  "invokeaction"
               ],
               "subprotocol":"ros",
               "ros:serviceName":"/#robotName/robot_local_control/NavigationComponent/PickComponent/add",
               "ros:serviceType":"robot_local_control_msgs/PickPetition",
               "ros:serviceRequestType":"robot_local_control_msgs.PickPetitionRequest",
               "ros:serviceResponseType":"robot_local_control_msgs.PickPetitionResponse"
            }
         ],
         "idempotent":false,
         "safe":false
      },
      "pickCancel":{
         "description":"Cancels the current pick mission",
         "ros:codeGenerator:class":"PickComponent",
         "input":{
            "type":"object",
            "properties":{
               "header":{
                  "type":"object",
                  "properties":{
                     "id":{
                        "type":"string",
                        "description":"The ID of the pick mission you want to cancel; -1 cancels last mission"
                     },
                     "priority":{
                        "type":"number"
                     },
                     "stamp":{
                        "type":"object",
                        "properties":{
                           "secs":{
                              "type":"number"
                           },
                           "nsecs":{
                              "type":"number"
                           }
                        }
                     },
                     "name":{
                        "type":"string"
                     }
                  }
               }
            }
         },
         "output":{
            "type":"object",
            "properties":{
               "_format":{
                  "type":"string"
               },
               "state":{
                  "type":"object",
                  "properties":{
                     "header":{
                        "type":"object",
                        "properties":{
                           "priority":{
                              "type":"string"
                           },
                           "stamp":{
                              "type":"object",
                              "properties":{
                                 "secs":{
                                    "type":"number"
                                 },
                                 "nsecs":{
                                    "type":"number"
                                 }
                              }
                           },
                           "id":{
                              "type":"number"
                           },
                           "name":{
                              "type":"string"
                           }
                        }
                     },
                     "current_state":{
                        "type":"string",
                        "enum":[
                           "queued",
                           "running",
                           "paused",
                           "finished",
                           "unknown"
                        ]
                     },
                     "last_event":{
                        "type":"string",
                        "enum":[
                           "added",
                           "start",
                           "stop",
                           "cancel",
                           "pause",
                           "resume",
                           "finish",
                           "abort"
                        ]
                     }
                  }
               },
               "result":{
                  "type":"object",
                  "properties":{
                     "message":{
                        "type":"string"
                     },
                     "result":{
                        "type":"string",
                        "enum":[
                           "ok",
                           "error"
                        ]
                     }
                  }
               }
            }
         },
         "forms":[
            {
               "href":"",
               "contentType":"application/xml",
               "op":[
                  "invokeaction"
               ],
               "subprotocol":"ros",
               "ros:serviceName":"/#robotName/robot_local_control/NavigationComponent/PickComponent/cancel",
               "ros:serviceType":"procedures_msgs/ProcedureQuery",
               "ros:serviceRequestType":"procedures_msgs.ProcedureQueryRequest",
               "ros:serviceResponseType":"procedures_msgs.ProcedureQueryResponse"
            }
         ],
         "idempotent":false,
         "safe":false
      },
      "pickQuery":{
         "description":"Gets the state of a pick mission",
         "ros:codeGenerator:class":"PickComponent",
         "input":{
            "type":"object",
            "properties":{
               "header":{
                  "type":"object",
                  "properties":{
                     "id":{
                        "type":"string",
                        "description":"The id of the pick mission you want to get the query state; -1 gets the query state of the last mission"
                     },
                     "priority":{
                        "type":"number"
                     },
                     "stamp":{
                        "type":"object",
                        "properties":{
                           "secs":{
                              "type":"number"
                           },
                           "nsecs":{
                              "type":"number"
                           }
                        }
                     },
                     "name":{
                        "type":"string"
                     }
                  }
               }
            }
         },
         "output":{
            "type":"object",
            "properties":{
               "_format":{
                  "type":"string"
               },
               "state":{
                  "type":"object",
                  "properties":{
                     "header":{
                        "type":"object",
                        "properties":{
                           "priority":{
                              "type":"string"
                           },
                           "stamp":{
                              "type":"object",
                              "properties":{
                                 "secs":{
                                    "type":"number"
                                 },
                                 "nsecs":{
                                    "type":"number"
                                 }
                              }
                           },
                           "id":{
                              "type":"number"
                           },
                           "name":{
                              "type":"string"
                           }
                        }
                     },
                     "current_state":{
                        "type":"string",
                        "enum":[
                           "queued",
                           "running",
                           "paused",
                           "finished",
                           "unknown"
                        ]
                     },
                     "last_event":{
                        "type":"string",
                        "enum":[
                           "added",
                           "start",
                           "stop",
                           "cancel",
                           "pause",
                           "resume",
                           "finish",
                           "abort"
                        ]
                     }
                  }
               },
               "result":{
                  "type":"object",
                  "properties":{
                     "message":{
                        "type":"string"
                     },
                     "result":{
                        "type":"string",
                        "enum":[
                           "ok",
                           "error"
                        ]
                     }
                  }
               }
            }
         },
         "forms":[
            {
               "href":"",
               "contentType":"application/xml",
               "op":[
                  "invokeaction"
               ],
               "subprotocol":"ros",
               "ros:serviceName":"/#robotName/robot_local_control/NavigationComponent/PickComponent/query_state",
               "ros:serviceType":"procedures_msgs/ProcedureQuery",
               "ros:serviceRequestType":"procedures_msgs.ProcedureQueryRequest",
               "ros:serviceResponseType":"procedures_msgs.ProcedureQueryResponse"
            }
         ],
         "idempotent":false,
         "safe":false
      },
      "placeRun":{
         "description":"Commands a robot to start place procedure",
         "ros:codeGenerator:class":"PlaceComponent",
         "input":{
            "type":"object",
            "properties":{
               "procedure":{
                  "type":"object",
                  "properties":{
                     "pick_frame_id":{
                        "type":"string",
                        "description":"Currently not used"
                     }
                  }
               }
            }
         },
         "output":{
            "type":"object",
            "properties":{
               "_format":{
                  "type":"string"
               },
               "state":{
                  "type":"object",
                  "properties":{
                     "header":{
                        "type":"object",
                        "properties":{
                           "priority":{
                              "type":"string"
                           },
                           "stamp":{
                              "type":"object",
                              "properties":{
                                 "secs":{
                                    "type":"number"
                                 },
                                 "nsecs":{
                                    "type":"number"
                                 }
                              }
                           },
                           "id":{
                              "type":"number"
                           },
                           "name":{
                              "type":"string"
                           }
                        }
                     },
                     "current_state":{
                        "type":"string",
                        "enum":[
                           "queued",
                           "running",
                           "paused",
                           "finished",
                           "unknown"
                        ]
                     },
                     "last_event":{
                        "type":"string",
                        "enum":[
                           "added",
                           "start",
                           "stop",
                           "cancel",
                           "pause",
                           "resume",
                           "finish",
                           "abort"
                        ]
                     }
                  }
               },
               "result":{
                  "type":"object",
                  "properties":{
                     "message":{
                        "type":"string"
                     },
                     "result":{
                        "type":"string",
                        "enum":[
                           "ok",
                           "error"
                        ]
                     }
                  }
               }
            }
         },
         "forms":[
            {
               "href":"",
               "contentType":"application/xml",
               "op":[
                  "invokeaction"
               ],
               "subprotocol":"ros",
               "ros:serviceName":"/#robotName/robot_local_control/NavigationComponent/PlaceComponent/add",
               "ros:serviceType":"robot_local_control_msgs/PlacePetition",
               "ros:serviceRequestType":"robot_local_control_msgs.PlacePetitionRequest",
               "ros:serviceResponseType":"robot_local_control_msgs.PlacePetitionResponse"
            }
         ],
         "idempotent":false,
         "safe":false
      },
      "placeCancel":{
         "description":"Cancels the current place mission",
         "ros:codeGenerator:class":"PlaceComponent",
         "input":{
            "type":"object",
            "properties":{
               "header":{
                  "type":"object",
                  "properties":{
                     "id":{
                        "type":"string",
                        "description":"The ID of the place mission you want to cancel; -1 cancels last mission"
                     },
                     "priority":{
                        "type":"number"
                     },
                     "stamp":{
                        "type":"object",
                        "properties":{
                           "secs":{
                              "type":"number"
                           },
                           "nsecs":{
                              "type":"number"
                           }
                        }
                     },
                     "name":{
                        "type":"string"
                     }
                  }
               }
            }
         },
         "output":{
            "type":"object",
            "properties":{
               "_format":{
                  "type":"string"
               },
               "state":{
                  "type":"object",
                  "properties":{
                     "header":{
                        "type":"object",
                        "properties":{
                           "priority":{
                              "type":"string"
                           },
                           "stamp":{
                              "type":"object",
                              "properties":{
                                 "secs":{
                                    "type":"number"
                                 },
                                 "nsecs":{
                                    "type":"number"
                                 }
                              }
                           },
                           "id":{
                              "type":"number"
                           },
                           "name":{
                              "type":"string"
                           }
                        }
                     },
                     "current_state":{
                        "type":"string",
                        "enum":[
                           "queued",
                           "running",
                           "paused",
                           "finished",
                           "unknown"
                        ]
                     },
                     "last_event":{
                        "type":"string",
                        "enum":[
                           "added",
                           "start",
                           "stop",
                           "cancel",
                           "pause",
                           "resume",
                           "finish",
                           "abort"
                        ]
                     }
                  }
               },
               "result":{
                  "type":"object",
                  "properties":{
                     "message":{
                        "type":"string"
                     },
                     "result":{
                        "type":"string",
                        "enum":[
                           "ok",
                           "error"
                        ]
                     }
                  }
               }
            }
         },
         "forms":[
            {
               "href":"",
               "contentType":"application/xml",
               "op":[
                  "invokeaction"
               ],
               "subprotocol":"ros",
               "ros:serviceName":"/#robotName/robot_local_control/NavigationComponent/PlaceComponent/cancel",
               "ros:serviceType":"procedures_msgs/ProcedureQuery",
               "ros:serviceRequestType":"procedures_msgs.ProcedureQueryRequest",
               "ros:serviceResponseType":"procedures_msgs.ProcedureQueryResponse"
            }
         ],
         "idempotent":false,
         "safe":false
      },
      "placeQuery":{
         "description":"Gets the state of a place mission",
         "ros:codeGenerator:class":"PlaceComponent",
         "input":{
            "type":"object",
            "properties":{
               "header":{
                  "type":"object",
                  "properties":{
                     "id":{
                        "type":"string",
                        "description":"The id of the place mission you want to get the query state; -1 gets the query state of the last mission"
                     },
                     "priority":{
                        "type":"number"
                     },
                     "stamp":{
                        "type":"object",
                        "properties":{
                           "secs":{
                              "type":"number"
                           },
                           "nsecs":{
                              "type":"number"
                           }
                        }
                     },
                     "name":{
                        "type":"string"
                     }
                  }
               }
            }
         },
         "output":{
            "type":"object",
            "properties":{
               "_format":{
                  "type":"string"
               },
               "state":{
                  "type":"object",
                  "properties":{
                     "header":{
                        "type":"object",
                        "properties":{
                           "priority":{
                              "type":"string"
                           },
                           "stamp":{
                              "type":"object",
                              "properties":{
                                 "secs":{
                                    "type":"number"
                                 },
                                 "nsecs":{
                                    "type":"number"
                                 }
                              }
                           },
                           "id":{
                              "type":"number"
                           },
                           "name":{
                              "type":"string"
                           }
                        }
                     },
                     "current_state":{
                        "type":"string",
                        "enum":[
                           "queued",
                           "running",
                           "paused",
                           "finished",
                           "unknown"
                        ]
                     },
                     "last_event":{
                        "type":"string",
                        "enum":[
                           "added",
                           "start",
                           "stop",
                           "cancel",
                           "pause",
                           "resume",
                           "finish",
                           "abort"
                        ]
                     }
                  }
               },
               "result":{
                  "type":"object",
                  "properties":{
                     "message":{
                        "type":"string"
                     },
                     "result":{
                        "type":"string",
                        "enum":[
                           "ok",
                           "error"
                        ]
                     }
                  }
               }
            }
         },
         "forms":[
            {
               "href":"",
               "contentType":"application/xml",
               "op":[
                  "invokeaction"
               ],
               "subprotocol":"ros",
               "ros:serviceName":"/#robotName/robot_local_control/NavigationComponent/PlaceComponent/query_state",
               "ros:serviceType":"procedures_msgs/ProcedureQuery",
               "ros:serviceRequestType":"procedures_msgs.ProcedureQueryRequest",
               "ros:serviceResponseType":"procedures_msgs.ProcedureQueryResponse"
            }
         ],
         "idempotent":false,
         "safe":false
      }
   }
}
